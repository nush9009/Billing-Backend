"""billing

Revision ID: 52d46bdfbd27
Revises: 66f354964c54
Create Date: 2025-09-11 16:32:14.535523

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '52d46bdfbd27'
down_revision = '66f354964c54'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('project_pricing')
    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.add_column(sa.Column('billing_record_id', sa.String(length=36), nullable=False))
        batch_op.add_column(sa.Column('project_id', sa.String(length=36), nullable=False))
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.drop_constraint(batch_op.f('invoices_billing_id_key'), type_='unique')
        batch_op.create_unique_constraint(None, ['billing_record_id'])
        batch_op.drop_constraint(batch_op.f('invoices_billing_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'project_billing', ['billing_record_id'], ['id'])
        batch_op.create_foreign_key(None, 'projects', ['project_id'], ['id'])
        batch_op.drop_column('tax_amount')
        batch_op.drop_column('invoice_data')
        batch_op.drop_column('billing_id')
        batch_op.drop_column('subtotal')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.add_column(sa.Column('subtotal', sa.NUMERIC(precision=12, scale=2), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('billing_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('invoice_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('tax_amount', sa.NUMERIC(precision=12, scale=2), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('invoices_billing_id_fkey'), 'project_billing', ['billing_id'], ['id'])
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint(batch_op.f('invoices_billing_id_key'), ['billing_id'], postgresql_nulls_not_distinct=False)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.drop_column('project_id')
        batch_op.drop_column('billing_record_id')

    op.create_table('project_pricing',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('seller_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('tier2_seller_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('project_type', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('pricing_model', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('base_price', sa.NUMERIC(precision=12, scale=2), autoincrement=False, nullable=False),
    sa.Column('hourly_rate', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['seller_id'], ['tier1_sellers.id'], name=op.f('project_pricing_seller_id_fkey')),
    sa.ForeignKeyConstraint(['tier2_seller_id'], ['tier2_sellers.id'], name=op.f('project_pricing_tier2_seller_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('project_pricing_pkey'))
    )
    # ### end Alembic commands ###
